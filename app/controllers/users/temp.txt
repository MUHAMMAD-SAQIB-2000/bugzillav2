class ProjectsController < ApplicationController
  load_and_authorize_resource :class => Project
  require 'pagy'

  def index
    @projects = []
    if user_signed_in?

      if current_user.user_type == 'Manager' then
        @pagy, @projects = pagy(Project.search(params[:search]).where('user_id = ?', current_user.id), items: 4)

      elsif current_user.user_type == 'Developer' || current_user.user_type == 'QA' then
        @user_projects = UserProject.where('user_id = ?', current_user.id)
        @user_projects.each { |user_project| @projects.append(Project.find(user_project.project_id)) }

      end
    end
  end

  def new
    @new = true
    @users = User.where('user_type != ?', current_user.user_type)
    @project = Project.new
    @user_project = UserProject.new
    @project.user_projects.build.build_user
    @existing_users = []
  end

  def create
    @project = Project.new(project_params)
    @project.user_id = current_user.id

    if @project.save
      # users = params[:users].reject { |u| u.empty? }
      # users.each do |user|
      #   user_id = user.to_s.split(" - ")[0].to_i
      #   @user = User.find(user_id)
      #   UserProject.create(user: @user, project: @project)
      # end
      flash[:notice] = "Project Created! #{@project.name}"
      redirect_to project_path(@project)
    else
      redirect_to new_project_url
    end
  end

  def show
    @project = Project.find(params[:id])
    @user = User.find(@project.user_id)

    if user_signed_in?
      if current_user.user_type == 'Manager'
        @users = []
        @user_projects = UserProject.where('project_id = ?', @project.id)
        @user_projects.each { |user_project| @users.append(User.find(user_project.user_id)) }
      end
    end
  end

  def edit
    @new = false
    @project = Project.find(params[:id])
    @existing_users = []
    @project_users = UserProject.where('project_id = ?', @project.id)
    @users = User.where('user_type != ?', 'Manager')
    if @project_users != nil
      @project_users.each { |project_user| @existing_users.append(User.find(project_user.user_id)) }
    end
  end

  def update
    user_ids = []
    @project = Project.find(params[:id])
    # @project.update_attributes()
    if @project.update(project_params)
      # flash[:notice] = "Project Updated! #{@project.users.size}"
      flash[:notice] = "Project Updated! #{(params[:users_attributes].to_s)}"
      # if params[:users] != nil
      #   users = params[:users].reject { |u| u.empty? }
      #   users.each do |user|
      #     user_id = user.to_s.split(" - ")[0].to_i
      #     user_ids.append(user_id)
      #   end
      #   @project.user_ids = user_ids
      # end
      redirect_to @project
    else
      flash[:alert] = "Project Not Updated! #{@project.users.size}"
      render :edit, status: :unprocessable_entity
    end
  end

  def destroy
    @project = Project.find(params[:id])
    Bug.where(:project_id => @project.id).destroy_all
    UserProject.where(:project_id => @project.id).destroy_all
    @project.delete
    redirect_to projects_path, status: :see_other
  end

  private

  def project_params
    params.require(:project)
          .permit(:name, :description,
                  user_projects_attributes: [:project_id, :user_id,
                                             users_attributes: [:id, :name]
                  ]
          )
  end
end
